<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="Copy" xml:space="preserve">
        <value>Copy</value>
    </data>
    <data name="Cut" xml:space="preserve">
        <value>Cut</value>
    </data>
    <data name="Select_All" xml:space="preserve">
        <value>Select All</value>
    </data>
    <data name="Delete" xml:space="preserve">
        <value>Delete</value>
    </data>
    <data name="Riddle" xml:space="preserve">
        <value>The director of a prison offers 100 death row prisoners, who are numbered from 1 to 100, a last chance. A room contains a cupboard with 100 drawers. The director randomly puts one prisoner's number in each closed drawer. The prisoners enter the room, one after another. Each prisoner may open and look into 50 drawers in any order. The drawers are closed again afterwards. If, during this search, every prisoner finds their number in one of the drawers, all prisoners are pardoned. If even one prisoner does not find their number, all prisoners die. Before the first prisoner enters the room, the prisoners may discuss strategy — but may not communicate once the first prisoner enters to look in the drawers. What is the prisoners' best strategy?</value>
    </data>
    <data name="Solution" xml:space="preserve">
        <value>Solution</value>
    </data>
    <data name="SolutionText" xml:space="preserve">
        <value>If every prisoner selects 50 drawers at random, the probability that a single prisoner finds their number is 50%.
Surprisingly, there is a strategy that provides a survival probability of more than 30%. The key to success is that the prisoners do not have to decide beforehand which drawers to open. Each prisoner can use the information gained from the contents of every drawer they already opened to decide which one to open next. Another important observation is that this way the success of one prisoner is not independent of the success of the other prisoners, because they all depend on the way the numbers are distributed.[2]

To describe the strategy, not only the prisoners, but also the drawers, are numbered from 1 to 100; for example, row by row starting with the top left drawer. The strategy is now as follows:[3]

    1. Each prisoner first opens the drawer labeled with their own number.
    2. If this drawer contains their number, they are done and were successful.
    3. Otherwise, the drawer contains the number of another prisoner, and they next open the drawer labeled with this number.
    4. The prisoner repeats steps 2 and 3 until they find their own number, or fail because the number is not found in the first fifty opened drawers.
By starting with their own number, the prisoner guarantees they are on the unique permutation cycle (see below) of drawers containing their number. The only question is whether this cycle is longer than fifty drawers.
        </value>
    </data>
    <data name="Go" xml:space="preserve">
        <value>Go</value>
    </data>
    <data name="Title" xml:space="preserve">
        <value>Prisoners Riddle</value>
    </data>
</root>